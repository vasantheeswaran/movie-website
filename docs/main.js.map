{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/component/movie-details/movie-details.component.ts","./src/app/component/movie-details/movie-details.component.html","./src/app/component/movie/movie.component.ts","./src/app/component/movie/movie.component.html","./src/app/service/movie-api.service.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MovieComponent } from './component/movie/movie.component';\nimport { MovieDetailsComponent } from './component/movie-details/movie-details.component';\n\nconst routes: Routes = [\n  {path:'',component:MovieComponent},\n  {path:'movie/:id',component:MovieDetailsComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component,HostListener } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Movie-iit';\n}\n","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MovieComponent } from './component/movie/movie.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MovieDetailsComponent } from './component/movie-details/movie-details.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MovieComponent,\n    MovieDetailsComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MovieApiService } from 'src/app/service/movie-api.service';\n\n@Component({\n  selector: 'app-movie-details',\n  templateUrl: './movie-details.component.html',\n  styleUrls: ['./movie-details.component.css']\n})\nexport class MovieDetailsComponent implements OnInit {\n  getMovieDetailResult: any;\n\n  constructor(\n    private service: MovieApiService,\n    private router: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    let getParamId = this.router.snapshot.paramMap.get('id');\n    console.log(getParamId, 'getparamid#');\n\n    this.getMovie(getParamId);\n  }\n\n  getMovie(id: any) {\n    this.service.getMovieDetails(id).subscribe(async (result) => {\n      console.log(result, 'getmoviedetails#');\n      this.getMovieDetailResult = await result;\n    });\n  }\n\n  trim(str: string): string {\n    return str.replace(/ /g, \"\");\n  }\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-lg-3 col-md-8 col-sm-12 text-center\">\n            <img *ngIf=\"getMovieDetailResult.Poster\" [src]=\"getMovieDetailResult.Poster\" alt=\"Movie Poster\">\n            <div *ngIf=\"getMovieDetailResult.Genre\" class=\"genre-list mt-4 mb-4 cursor-pointer\">\n                <span class=\"genre text-center\"\n                    *ngFor=\"let g of getMovieDetailResult.Genre.split(',', 3)\">{{trim(g)}}</span>\n\n            </div>\n        </div>\n        <div class=\"col-lg-5 movie-details mt-2\">\n            <ul>\n                <li>\n                    <b>Title: </b> {{getMovieDetailResult.Title }} ( {{getMovieDetailResult.Year}} )\n                </li>\n                <li>{{getMovieDetailResult.Plot}}</li>\n                <li><b>Released: </b> {{getMovieDetailResult.Released}}</li>\n                <li><b>Writer: </b> {{getMovieDetailResult.Writer}}</li>\n                <li><b>Director: </b> {{getMovieDetailResult.Director}}</li>\n                <li><b>Duration: </b> {{getMovieDetailResult.Runtime}}</li>\n                <li><b>Rating: </b> {{getMovieDetailResult.imdbRating}} <img class=\"pb-1\" src=\"../assets/star.svg\"></li>\n                <a href=\"https://www.imdb.com/title/{{getMovieDetailResult.imdbID}}\" target=\"_blank\">\n                    <img class=\"mt-2\" src=\"../assets/imdb.png\" width=\"100px\">\n                </a>\n            </ul>\n\n        </div>\n    </div>\n    <div class=\"row mt-4\">\n        <div class=\"col-lg-12 text-center\">\n            <button class=\"btn btn-primary\" routerLink=\"/\">Home</button>\n        </div>\n    </div>\n</div>","import { Component, OnInit, HostListener } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { MovieApiService } from 'src/app/service/movie-api.service';\n@Component({\n  selector: 'app-movie',\n  templateUrl: './movie.component.html',\n  styleUrls: ['./movie.component.css']\n})\nexport class MovieComponent implements OnInit {\n\n  constructor(private service: MovieApiService) {\n\n  }\n  searchResult: any;\n  errorMessage: any;\n  searchForm = new FormGroup({\n    movieName: new FormControl(null)\n  });\n  isSearchPerformed: boolean = false;\n\n  genres: string[] = ['Action', 'Adventure', 'Animation', 'Comedy', 'Documentary', 'Drama', 'Fantasy', 'Horror', 'Mystery', 'Romance', 'Sci-Fi', 'Thriller', 'War', 'Western'];\n  ratings: number[] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\n  selectedGenre: string = '';\n  selectedRating: number = 0;\n  selectedYear: number = null!;\n  movies: any[] = [];\n  actionMovieResult: any = [];\n  adventureMovieResult: any = [];\n  animationMovieResult: any = [];\n  comedyMovieResult: any = [];\n  documentaryMovieResult: any = [];\n  sciencefictionMovieResult: any = [];\n  thrillerMovieResult: any = [];\n\n  ngOnInit(): void {\n    this.actionMovie();\n    this.adventureMovie();\n    this.comedyMovie();\n    this.animationMovie();\n    this.documentaryMovie();\n    this.sciencefictionMovie();\n    this.thrillerMovie();\n  }\n\n  applyFilters(): void {\n    this.service.fetchMoviesByFilter(this.selectedGenre, this.selectedRating, this.selectedYear)\n      .subscribe((result) => {\n        if (result?.Search) {\n          this.searchResult = result.Search.slice(0, 20);\n        } else {\n          this.searchResult = [];\n        }\n      });\n  }\n  // action \n  actionMovie() {\n    this.service.fetchActionMovies().subscribe((result) => {\n      this.actionMovieResult = result.Search;\n    });\n  }\n\n  // adventure \n  adventureMovie() {\n    this.service.fetchAdventureMovies().subscribe((result) => {\n      this.adventureMovieResult = result.Search;\n    });\n  }\n\n  // animation \n  animationMovie() {\n    this.service.fetchAnimationMovies().subscribe((result) => {\n      this.animationMovieResult = result.Search;\n    });\n  }\n\n  // comedy \n  comedyMovie() {\n    this.service.fetchComedyMovies().subscribe((result) => {\n      this.comedyMovieResult = result.Search;\n    });\n  }\n\n  // documentary \n  documentaryMovie() {\n    this.service.fetchDocumentaryMovies().subscribe((result) => {\n      this.documentaryMovieResult = result.Search;\n    });\n  }\n\n  // science-fiction \n  sciencefictionMovie() {\n    this.service.fetchScienceFictionMovies().subscribe((result) => {\n      this.sciencefictionMovieResult = result.Search;\n    });\n  }\n\n  // thriller\n  thrillerMovie() {\n    this.service.fetchThrillerMovies().subscribe((result) => {\n      this.thrillerMovieResult = result.Search;\n    });\n  }\n  submitForm() {\n    const movieName = this.searchForm.value.movieName;\n    if (movieName) {\n      this.service.getMoviesByTitle(movieName).subscribe((result) => {\n        console.log(result, 'searchmovie##');\n        if (result.Error) {\n          // Handle movie not found error\n          this.searchResult = null; // Reset search results\n          this.errorMessage = result.Error;\n        } else {\n          this.searchResult = result.Search;\n          this.errorMessage = null; // Reset error message\n        }\n      });\n    } else {\n      // Handle case where no movie is entered\n      this.searchResult = null; // Reset search results\n      this.errorMessage = \"Please enter a movie name.\";\n    }\n  }\n\n  navbg: any;\n  @HostListener('document:scroll') scrollover() {\n    console.log(document.body.scrollTop, 'scrolllength#');\n\n    if (document.body.scrollTop > 0 || document.documentElement.scrollTop > 0) {\n      this.navbg = {\n        'background-color': '#000000'\n      }\n    } else {\n      this.navbg = {}\n    }\n  }\n\n}","<nav class=\"navbar navbar-expand-lg fixed-top\" [ngStyle]=\"navbg\">\n    <div class=\"container-fluid\">\n        <a class=\"navbar-brand\" routerLink=\"\">MOVIEBUFF</a>\n        <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\"\n            aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span class=\"navbar-toggler-icon\"></span>\n        </button>\n        <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n            <ul class=\"navbar-nav ms-auto align-items-center\">\n                <form [formGroup]=\"searchForm\" (ngSubmit)=\"submitForm()\" class=\"d-flex flex-wrap\">\n                    <div class=\"input-group mb-3\">\n                        <input type=\"text\" class=\"form-control\" formControlName=\"movieName\"\n                            placeholder=\"Search Movie Here ...\">\n                        <button type=\"submit\" class=\"btn btn-primary\">Search</button>\n                    </div>\n                </form>\n            </ul>\n        </div>\n    </div>\n</nav>\n<div class=\"contain mt-5 p-5\" style=\"display: flex;\n  align-items: center;\">\n    <div class=\"form-group\">\n        <label for=\"genre\" class=\"form-label\">Genre:</label>\n        <select id=\"genre\" class=\"form-control\" [(ngModel)]=\"selectedGenre\">\n            <option value=\"\">Any Genre</option>\n            <option *ngFor=\"let genre of genres\" [value]=\"genre\">{{ genre }}</option>\n        </select>\n    </div>\n    <div class=\"form-group\">\n        <label for=\"rating\" class=\"form-label\">Rating:</label>\n        <select id=\"rating\" class=\"form-control\" [(ngModel)]=\"selectedRating\">\n            <option value=\"\">Any Rating</option>\n            <option *ngFor=\"let rating of ratings\" [value]=\"rating\">{{ rating }}</option>\n        </select>\n    </div>\n\n    <div class=\"form-group\">\n        <label for=\"year\" class=\"form-label\">Year:</label>\n        <input id=\"year\" class=\"form-control\" type=\"number\" [(ngModel)]=\"selectedYear\" placeholder=\"Year\">\n    </div>\n\n    <div class=\"form-group mt-4\">\n        <button class=\"btn btn-primary form-control\" (click)=\"applyFilters()\">Filter</button>\n    </div>\n</div>\n<div class=\"container mt-5\">\n    <div class=\"row\">\n        <div class=\"col-lg-12\">\n            <div *ngIf=\"errorMessage || searchResult===0\" class=\"alert alert-danger\" role=\"alert\">\n                {{ errorMessage }}\n            </div>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-lg-2 col-md-6 col-sm-10 mb-2\" *ngFor=\"let movie of searchResult\">\n            <div class=\"card h-100\">\n                <img class=\"card-img-top\" *ngIf=\"movie.Poster !== 'N/A'\" src=\"{{ movie.Poster }}\"\n                    [routerLink]=\"['/movie', movie.imdbID]\" alt=\"Movie Poster\">\n                <div class=\"card-body\">\n                    <p class=\"card-title\">{{ movie.Title }}</p>\n                    <p class=\"card-text\">Year: {{ movie.Year }}</p>\n                    <p class=\"card-text\">Type: {{ movie.Type}}</p>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n\n<div class=\"contain mt-3 mb-5 p-4\">\n    <!-- action movies  -->\n    <div class=\"row mt-4\">\n        <h5 class=\"text-white\">Action Movies</h5>\n        <div class=\"rowposter mt-3 p-2\">\n            <ng-container *ngFor=\"let a of actionMovieResult\">\n                <img src=\"{{ a.Poster }}\" class=\"rowimg largeposter\" alt=\"...\" [routerLink]=\"['/movie', a.imdbID]\">\n            </ng-container>\n        </div>\n    </div>\n\n    <!-- adventure movies  -->\n    <div class=\"row mt-4\">\n        <h5 class=\"text-white\">Adventure Movies</h5>\n        <div class=\"rowposter mt-3 p-2\">\n            <ng-container *ngFor=\"let a of adventureMovieResult\">\n                <img src=\"{{ a.Poster }}\" class=\"rowimg largeposter\" alt=\"...\" [routerLink]=\"['/movie', a.imdbID]\">\n            </ng-container>\n        </div>\n    </div>\n\n    <!-- animation movies  -->\n    <div class=\"row mt-4\">\n        <h5 class=\"text-white\">Animation Movies</h5>\n        <div class=\"rowposter mt-3 p-2\">\n            <ng-container *ngFor=\"let a of animationMovieResult\">\n                <img src=\"{{ a.Poster }}\" class=\"rowimg largeposter\" alt=\"...\" [routerLink]=\"['/movie', a.imdbID]\">\n            </ng-container>\n        </div>\n    </div>\n\n    <!-- comedy movies  -->\n    <div class=\"row mt-4\">\n        <h5 class=\"text-white\">Comedy Movies</h5>\n        <div class=\"rowposter mt-3 p-2\">\n            <ng-container *ngFor=\"let c of comedyMovieResult\">\n                <img src=\"{{ c.Poster }}\" class=\"rowimg largeposter\" alt=\"...\" [routerLink]=\"['/movie', c.imdbID]\">\n            </ng-container>\n        </div>\n    </div>\n\n    <!-- documentary movies  -->\n    <div class=\"row mt-4\">\n        <h5 class=\"text-white\">Documentary Movies</h5>\n        <div class=\"rowposter mt-3 p-2\">\n            <ng-container *ngFor=\"let d of documentaryMovieResult\">\n                <img src=\"{{ d.Poster }}\" class=\"rowimg largeposter\" alt=\"...\" [routerLink]=\"['/movie', d.imdbID]\">\n            </ng-container>\n        </div>\n    </div>\n\n    <!-- science-fiction movies  -->\n    <div class=\"row mt-4\">\n        <h5 class=\"text-white\">Science-Fiction Movies</h5>\n        <div class=\"rowposter mt-3 p-2\">\n            <ng-container *ngFor=\"let sf of sciencefictionMovieResult\">\n                <img src=\"{{ sf.Poster }}\" class=\"rowimg largeposter\" alt=\"...\" [routerLink]=\"['/movie', sf.imdbID]\">\n            </ng-container>\n        </div>\n    </div>\n\n    <!-- thriller movies  -->\n    <div class=\"row mt-4\">\n        <h5 class=\"text-white\">Thriller Movies</h5>\n        <div class=\"rowposter mt-3 p-2\">\n            <ng-container *ngFor=\"let th of thrillerMovieResult\">\n                <img src=\"{{ th.Poster }}\" class=\"rowimg largeposter\" alt=\"...\" [routerLink]=\"['/movie', th.imdbID]\">\n            </ng-container>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MovieApiService {\n  constructor(private http: HttpClient) { }\n\n  baseurl = \"http://www.omdbapi.com\";\n  apikey = \"a2d3d680\"; // Replace with your actual API key\n\n  // bannerapidata\n  bannerApiData(): Observable<any> {\n    return this.http.get(`${this.baseurl}/?s=trending&apikey=${this.apikey}`);\n  }\n\n  // trendingmovieapidata \n  trendingMovieApiData(): Observable<any> {\n    return this.http.get(`${this.baseurl}/?s=trending&type=movie&apikey=${this.apikey}`);\n  }\n\n  // searchmovive\n  getMoviesByTitle(title: string) {\n    const params = {\n      apikey: this.apikey,\n      s: title\n    };\n\n    return this.http.get<any>(this.baseurl, { params });\n  }\n\n  // getmoviedatails\n  getMovieDetails(data: any): Observable<any> {\n    return this.http.get(`${this.baseurl}/?i=${data}&apikey=${this.apikey}`);\n  }\n\n\n  // getMovieCast\n  // getMovieCast(data: any): Observable<any> {\n  //   return this.http.get(`${this.baseurl}/?i=${data}&apikey=${this.apikey}`);\n  // }\n\n  // action \n  fetchActionMovies(): Observable<any> {\n    return this.http.get(`${this.baseurl}/?s=action&type=movie&apikey=${this.apikey}`);\n  }\n\n  // adventure\n  fetchAdventureMovies(): Observable<any> {\n    return this.http.get(`${this.baseurl}/?s=adventure&type=movie&apikey=${this.apikey}`);\n  }\n\n  // animation\n  fetchAnimationMovies(): Observable<any> {\n    return this.http.get(`${this.baseurl}/?s=animation&type=movie&apikey=${this.apikey}`);\n  }\n\n  // comedy\n  fetchComedyMovies(): Observable<any> {\n    return this.http.get(`${this.baseurl}/?s=comedy&type=movie&apikey=${this.apikey}`);\n  }\n\n  // documentary\n  fetchDocumentaryMovies(): Observable<any> {\n    return this.http.get(`${this.baseurl}/?s=documentary&type=movie&apikey=${this.apikey}`);\n  }\n\n  // science-fiction:878\n  fetchScienceFictionMovies(): Observable<any> {\n    return this.http.get(`${this.baseurl}/?s=science fiction&type=movie&apikey=${this.apikey}`);\n  }\n\n  // thriller:53\n  fetchThrillerMovies(): Observable<any> {\n    return this.http.get(`${this.baseurl}/?s=thriller&type=movie&apikey=${this.apikey}`);\n  }\n  fetchMoviesByFilter(genre: string, rating: number, year: number): Observable<any> {\n    const params: any = {\n      apikey: this.apikey,\n      type: 'movie',\n      s:genre,\n      y: year\n    };\n\n    if (genre) {\n      params.genre = genre;\n    }\n\n    if (rating) {\n      params.imdbRating = `${rating},10`;\n    }\n\n    return this.http.get(this.baseurl, { params });\n  }\n}\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\n\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["RouterModule","MovieComponent","MovieDetailsComponent","routes","path","component","AppRoutingModule","forRoot","imports","i1","exports","AppComponent","constructor","title","selectors","decls","vars","template","AppComponent_Template","rf","ctx","i0","ɵɵelement","BrowserModule","HttpClientModule","FormsModule","ReactiveFormsModule","AppModule","bootstrap","declarations","ɵɵproperty","ctx_r0","getMovieDetailResult","Poster","ɵɵsanitizeUrl","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r2","trim","g_r3","ɵɵtemplate","MovieDetailsComponent_div_4_span_1_Template","ctx_r1","Genre","split","service","router","ngOnInit","getParamId","snapshot","paramMap","get","console","log","getMovie","id","_this","getMovieDetails","subscribe","_ref","_asyncToGenerator","result","_x","apply","arguments","str","replace","ɵɵdirectiveInject","MovieApiService","i2","ActivatedRoute","consts","MovieDetailsComponent_Template","MovieDetailsComponent_img_3_Template","MovieDetailsComponent_div_4_Template","ɵɵtextInterpolate2","Title","Year","Plot","ɵɵtextInterpolate1","Released","Writer","Director","Runtime","imdbRating","ɵɵpropertyInterpolate1","imdbID","FormGroup","FormControl","genre_r11","rating_r12","errorMessage","ɵɵpropertyInterpolate","movie_r13","ɵɵpureFunction1","_c0","MovieComponent_div_40_img_2_Template","Type","ɵɵelementContainerStart","ɵɵelementContainerEnd","a_r16","a_r17","a_r18","c_r19","d_r20","sf_r21","th_r22","searchForm","movieName","isSearchPerformed","genres","ratings","selectedGenre","selectedRating","selectedYear","movies","actionMovieResult","adventureMovieResult","animationMovieResult","comedyMovieResult","documentaryMovieResult","sciencefictionMovieResult","thrillerMovieResult","actionMovie","adventureMovie","comedyMovie","animationMovie","documentaryMovie","sciencefictionMovie","thrillerMovie","applyFilters","fetchMoviesByFilter","Search","searchResult","slice","fetchActionMovies","fetchAdventureMovies","fetchAnimationMovies","fetchComedyMovies","fetchDocumentaryMovies","fetchScienceFictionMovies","fetchThrillerMovies","submitForm","value","getMoviesByTitle","Error","scrollover","document","body","scrollTop","documentElement","navbg","hostBindings","MovieComponent_HostBindings","ɵɵresolveDocument","ɵɵlistener","MovieComponent_Template_form_ngSubmit_8_listener","MovieComponent_Template_select_ngModelChange_17_listener","$event","MovieComponent_option_20_Template","MovieComponent_Template_select_ngModelChange_24_listener","MovieComponent_option_27_Template","MovieComponent_Template_input_ngModelChange_31_listener","MovieComponent_Template_button_click_33_listener","MovieComponent_div_38_Template","MovieComponent_div_40_Template","MovieComponent_ng_container_46_Template","MovieComponent_ng_container_51_Template","MovieComponent_ng_container_56_Template","MovieComponent_ng_container_61_Template","MovieComponent_ng_container_66_Template","MovieComponent_ng_container_71_Template","MovieComponent_ng_container_76_Template","http","baseurl","apikey","bannerApiData","trendingMovieApiData","params","s","data","genre","rating","year","type","y","ɵɵinject","HttpClient","factory","ɵfac","providedIn","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err","error"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}